generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model bid {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  proposal      String?   @db.VarChar(255)
  amount        Int?
  date          DateTime? @db.Timestamp(6)
  project_id    String    @db.Uuid
  freelancer_id String    @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  user          user      @relation(fields: [freelancer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project       project   @relation(fields: [project_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  location    String?  @db.VarChar(255)
  industry    String?  @db.VarChar(255)
  website     String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model project {
  id                               String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                            String    @db.VarChar(255)
  description                      String?   @db.VarChar(255)
  deadline                         DateTime? @db.Timestamp(6)
  budget                           Int?
  client_id                        String    @db.Uuid
  freelancer_id                    String    @db.Uuid
  created_at                       DateTime  @default(now()) @db.Timestamp(6)
  updated_at                       DateTime  @default(now()) @db.Timestamp(6)
  bid                              bid[]
  user_project_client_idTouser     user      @relation("project_client_idTouser", fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_project_freelancer_idTouser user      @relation("project_freelancer_idTouser", fields: [freelancer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model review {
  id                              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating                          Int
  comment                         String?   @db.VarChar(255)
  date                            DateTime? @db.Timestamp(6)
  client_id                       String    @db.Uuid
  freelancer_id                   String    @db.Uuid
  created_at                      DateTime  @default(now()) @db.Timestamp(6)
  updated_at                      DateTime  @default(now()) @db.Timestamp(6)
  user_review_client_idTouser     user      @relation("review_client_idTouser", fields: [client_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_review_freelancer_idTouser user      @relation("review_freelancer_idTouser", fields: [freelancer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model skill {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  category    String?  @db.VarChar(255)
  user_id     String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                               String    @unique @db.VarChar(255)
  firstName                           String?   @db.VarChar(255)
  lastName                            String?   @db.VarChar(255)
  roq_user_id                         String    @db.VarChar(255)
  tenant_id                           String    @db.VarChar(255)
  created_at                          DateTime  @default(now()) @db.Timestamp(6)
  updated_at                          DateTime  @default(now()) @db.Timestamp(6)
  bid                                 bid[]
  company                             company[]
  project_project_client_idTouser     project[] @relation("project_client_idTouser")
  project_project_freelancer_idTouser project[] @relation("project_freelancer_idTouser")
  review_review_client_idTouser       review[]  @relation("review_client_idTouser")
  review_review_freelancer_idTouser   review[]  @relation("review_freelancer_idTouser")
  skill                               skill[]
}
